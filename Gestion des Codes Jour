<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion des Codes Jour - Discothèque</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Inclure html2pdf.js pour la génération de PDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Roboto', sans-serif;
        }
        
        body {
            background-color: #121212;
            color: #ffffff;
            padding: 20px;
            min-height: 100vh;
        }

        .container {
            background-color: #1e1e1e;
            border-radius: 12px;
            max-width: 1200px;
            margin: 0 auto;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        }

        .header {
            background-color: #2c2c2c;
            padding: 20px;
            text-align: center;
            border-bottom: 1px solid #333;
        }

        .year-month-nav {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            padding: 10px;
            background: linear-gradient(135deg, #1c2526 0%, #2a3b4c 100%);
            overflow-x: auto;
            position: relative;
        }

        .year-select-btn {
            padding: 5px 15px;
            background: #444;
            border: 1px solid #333;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s, box-shadow 0.3s;
            font-size: 14px;
            position: relative;
        }

        .year-select-btn:hover {
            background: #555;
            box-shadow: 0 0 10px #9733EE, 0 0 5px #00D4FF;
        }

        .year-select-btn:after {
            content: ' ▼';
            font-size: 12px;
            margin-left: 5px;
        }

        .year-dropdown {
            display: none;
            position: absolute;
            background: #2c2c2c;
            border: 1px solid #333;
            border-radius: 4px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
            z-index: 1000;
            min-width: 100px;
            top: 100%;
            left: 0;
        }

        .year-option {
            padding: 8px;
            color: white;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.2s;
        }

        .year-option:hover {
            background: #444;
        }

        .month-btn {
            padding: 5px 10px;
            background: #444;
            border: 1px solid #333;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s, box-shadow 0.3s;
            white-space: nowrap;
            font-size: 14px;
        }

        .month-btn:hover {
            background: #555;
            box-shadow: 0 0 10px #9733EE, 0 0 5px #00D4FF;
        }

        .month-btn.active {
            background: linear-gradient(to right, #9733EE, #DA22FF);
        }

        .calendar {
            padding: 20px;
        }

        .week-row {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
            margin-bottom: 5px;
        }

        .day-cell {
            padding: 15px;
            background: #2c2c2c;
            border-radius: 8px;
            text-align: center;
            min-height: 80px;
        }

        .day-cell:hover {
            box-shadow: 0 0 5px #00D4FF;
        }

        .day-cell.today {
            border: 2px solid #FF00FF; /* Bordure rose pour le jour actuel */
        }

        .day-cell input {
            width: 100%;
            padding: 5px;
            background: #333;
            border: 1px solid #444;
            color: white;
            border-radius: 4px;
            text-align: center;
            margin-top: 5px;
        }

        .day-cell input:focus {
            background: #444;
            box-shadow: 0 0 5px #00D4FF;
            outline: none;
        }

        .controls {
            padding: 20px;
            display: flex;
            gap: 15px;
            justify-content: center;
            align-items: center;
        }

        .generate-label {
            font-size: 16px;
            margin-right: 10px;
            cursor: default; /* Pas cliquable */
        }

        .generate-option {
            padding: 8px 15px;
            background: #444;
            border: 1px solid #333;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s, box-shadow 0.3s;
            margin-left: 5px;
        }

        .generate-option:hover {
            background: #555;
            box-shadow: 0 0 10px #9733EE, 0 0 5px #00D4FF;
        }

        .generate-option.active {
            background: linear-gradient(to right, #9733EE, #DA22FF);
        }

        .export-btn {
            padding: 10px 20px;
            border: 1px solid #333;
            border-radius: 6px;
            cursor: pointer;
            transition: box-shadow 0.3s;
            background: #444;
        }

        .export-btn:hover {
            box-shadow: 0 0 10px #9733EE, 0 0 5px #00D4FF;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Gestion des Codes Jour</h1>
            <div class="subtitle">Planning Annuel des Codes Discothèque</div>
        </div>

        <div class="year-month-nav" id="yearMonthNav"></div>
        
        <div class="calendar" id="calendar"></div>

        <div class="controls">
            <span class="generate-label">Générer Code Automatique</span>
            <button class="generate-option" onclick="generateCodes('month')">Mois</button>
            <button class="generate-option" onclick="generateCodes('year')">Année</button>
            <button class="export-btn" onclick="exportToPDF()">Exporter en PDF</button>
        </div>
    </div>

    <script>
        const months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];
        const days = ['L', 'M', 'M', 'J', 'V', 'S', 'D'];
        let currentYear = new Date().getFullYear(); // Année actuelle (2025)
        let currentMonth = new Date().getMonth(); // Mois actuel
        let codes = {};
        let lastGenerateType = 'month'; // Par défaut, génération par mois
        let yearDropdown = null; // Variable globale pour stocker le dropdown

        function init() {
            renderYearMonthNav();
            renderCalendar(currentYear, currentMonth);
            createYearDropdown(); // Créer le dropdown une seule fois à l'initialisation
        }

        function renderYearMonthNav() {
            const nav = document.getElementById('yearMonthNav');
            nav.innerHTML = `
                <div class="year-select-btn" id="yearSelectBtn">${currentYear}</div>
                <div class="month-nav" id="monthNav"></div>
            `;

            const monthNav = document.getElementById('monthNav');
            months.forEach((month, index) => {
                const btn = document.createElement('button');
                btn.className = `month-btn ${index === currentMonth ? 'active' : ''}`;
                btn.textContent = month;
                btn.onclick = () => {
                    currentMonth = index;
                    renderYearMonthNav();
                    renderCalendar(currentYear, index);
                };
                monthNav.appendChild(btn);
            });

            const yearBtn = document.getElementById('yearSelectBtn');
            if (yearBtn) {
                yearBtn.removeEventListener('click', toggleYearDropdown);
                yearBtn.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    toggleYearDropdown();
                });
            }
        }

        function createYearDropdown() {
            // Créer le conteneur de la liste personnalisée
            yearDropdown = document.createElement('div');
            yearDropdown.className = 'year-dropdown';
            yearDropdown.id = 'yearDropdown';
            yearDropdown.style.display = 'none';
            yearDropdown.style.position = 'absolute';
            yearDropdown.style.zIndex = '1000';

            // Ajouter les options d'années
            const years = [2025, 2026, 2027];
            years.forEach(year => {
                const option = document.createElement('div');
                option.className = 'year-option';
                option.textContent = year;
                option.onclick = () => {
                    currentYear = year;
                    codes = {}; // Réinitialiser les codes pour la nouvelle année
                    renderYearMonthNav();
                    renderCalendar(currentYear, currentMonth);
                    yearDropdown.style.display = 'none'; // Masquer après sélection
                };
                yearDropdown.appendChild(option);
            });

            // Ajouter au body
            document.body.appendChild(yearDropdown);
        }

        function toggleYearDropdown() {
            const yearBtn = document.getElementById('yearSelectBtn');
            if (!yearBtn) {
                console.error('Élément yearSelectBtn non trouvé.');
                return;
            }

            if (!yearDropdown) {
                createYearDropdown();
            }

            if (yearDropdown.style.display === 'none' || yearDropdown.style.display === '') {
                // Positionner le dropdown sous le bouton
                const rect = yearBtn.getBoundingClientRect();
                yearDropdown.style.left = rect.left + 'px';
                yearDropdown.style.top = rect.bottom + 'px';
                yearDropdown.style.width = yearBtn.offsetWidth + 'px';
                yearDropdown.style.display = 'block';
            } else {
                yearDropdown.style.display = 'none';
            }

            // Fermer le dropdown si clic ailleurs
            document.addEventListener('click', function closeDropdown(event) {
                if (!yearDropdown.contains(event.target) && event.target !== yearBtn) {
                    yearDropdown.style.display = 'none';
                    document.removeEventListener('click', closeDropdown);
                }
            }, { once: true });
        }

        function renderCalendar(year, month) {
            const calendar = document.getElementById('calendar');
            calendar.innerHTML = '';
            
            // Header avec les jours de la semaine
            const header = document.createElement('div');
            header.className = 'week-row';
            ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'].forEach(day => {
                const cell = document.createElement('div');
                cell.className = 'day-cell';
                cell.textContent = day.substring(0, 1);
                header.appendChild(cell);
            });
            calendar.appendChild(header);

            // Calcul des jours du mois
            const firstDay = new Date(year, month, 1).getDay();
            const daysInMonth = new Date(year, month + 1, 0).getDate();
            let dayCount = 1;
            let weeks = Math.ceil((daysInMonth + (firstDay || 7) - 1) / 7);

            const today = new Date();
            const isCurrentMonth = year === today.getFullYear() && month === today.getMonth();

            for (let i = 0; i < weeks; i++) {
                const row = document.createElement('div');
                row.className = 'week-row';
                
                for (let j = 0; j < 7; j++) {
                    const cell = document.createElement('div');
                    cell.className = 'day-cell';
                    
                    if ((i === 0 && j < (firstDay || 7) - 1) || dayCount > daysInMonth) {
                        cell.textContent = '';
                    } else {
                        const date = new Date(year, month, dayCount);
                        const dateStr = `${year}-${String(month + 1).padStart(2, '0')}-${String(dayCount).padStart(2, '0')}`;
                        cell.innerHTML = `
                            ${dayCount}<br>
                            <input type="text" value="${codes[dateStr] || ''}" placeholder="Ex: L 237" onchange="updateCode('${dateStr}', this.value)">
                        `;
                        if (isCurrentMonth && date.getDate() === today.getDate()) {
                            cell.classList.add('today');
                        }
                        dayCount++;
                    }
                    row.appendChild(cell);
                }
                calendar.appendChild(row);
            }
        }

        function updateCode(date, value) {
            codes[date] = value.toUpperCase();
        }

        function generateCodes(type) {
            lastGenerateType = type;
            if (type === 'month') {
                generateMonthCodes();
            } else if (type === 'year') {
                generateYearCodes();
            }
            // Mettre à jour l'apparence des boutons pour indiquer l'option active
            document.querySelectorAll('.generate-option').forEach(btn => {
                btn.classList.remove('active');
                if (btn.textContent === type) btn.classList.add('active');
            });
        }

        function generateMonthCodes() {
            const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
            const usedNumbers = new Set();

            for (let i = 1; i <= daysInMonth; i++) {
                const date = `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-${String(i).padStart(2, '0')}`;
                const dayIndex = new Date(currentYear, currentMonth, i).getDay();
                let randomNum;
                do {
                    randomNum = Math.floor(Math.random() * 999) + 1;
                } while (usedNumbers.has(randomNum));
                usedNumbers.add(randomNum);
                codes[date] = `${days[dayIndex || 6]} ${String(randomNum).padStart(3, '0')}`;
            }
            renderCalendar(currentYear, currentMonth);
        }

        function generateYearCodes() {
            for (let year of [2025, 2026, 2027]) {
                for (let month = 0; month < 12; month++) {
                    const daysInMonth = new Date(year, month + 1, 0).getDate();
                    const usedNumbers = new Set();

                    for (let i = 1; i <= daysInMonth; i++) {
                        const date = `${year}-${String(month + 1).padStart(2, '0')}-${String(i).padStart(2, '0')}`;
                        if (!codes[date]) {
                            const dayIndex = new Date(year, month, i).getDay();
                            let randomNum;
                            do {
                                randomNum = Math.floor(Math.random() * 999) + 1;
                            } while (usedNumbers.has(randomNum));
                            usedNumbers.add(randomNum);
                            codes[date] = `${days[dayIndex || 6]} ${String(randomNum).padStart(3, '0')}`;
                        }
                    }
                }
            }
            renderCalendar(currentYear, currentMonth);
        }

        function exportToPDF() {
            try {
                const element = document.querySelector('.container');
                if (!element) {
                    console.error("Élément non trouvé pour l'exportation en PDF.");
                    alert('Une erreur est survenue : le conteneur du planning n\'a pas été trouvé.');
                    return;
                }

                if (typeof html2pdf !== 'function') {
                    throw new Error('html2pdf.js n\'est pas chargé.');
                }

                html2pdf(element, {
                    margin: 10,
                    filename: `Planning_${currentYear}_${months[currentMonth].replace(' ', '_')}.pdf`,
                    image: { type: 'jpeg', quality: 0.98 },
                    html2canvas: { scale: 2 },
                    jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
                }).then(() => {
                    console.log('PDF téléchargé avec succès');
                }).catch(error => {
                    console.error('Erreur lors de la génération du PDF :', error);
                    alert('Une erreur est survenue lors de l’exportation en PDF.');
                });
            } catch (error) {
                console.error('Erreur dans exportToPDF :', error);
                alert('Une erreur est survenue lors de l’exportation en PDF.');
            }
        }

        init();
    </script>
</body>
</html>
