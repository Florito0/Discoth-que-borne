<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gestion Capacité d'Accueil</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Roboto', sans-serif;
    }
    
    body {
      background-color: #121212;
      color: #ffffff;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
    }
    
    .container {
      background-color: #1e1e1e;
      border-radius: 12px;
      width: 100%;
      max-width: 600px;
      overflow: hidden;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    }
    
    .header {
      background-color: #2c2c2c;
      padding: 20px;
      text-align: center;
      border-bottom: 1px solid #333;
    }
    
    h1 {
      font-size: 24px;
      font-weight: 700;
      margin-bottom: 8px;
      color: #fff;
    }
    
    .subtitle {
      font-size: 16px;
      color: #b3b3b3;
    }
    
    .capacity-display {
      padding: 20px;
      text-align: center;
    }
    
    .current-capacity {
      font-size: 48px;
      font-weight: 700;
      margin: 20px 0;
    }
    
    .capacity-bar {
      width: 80%;
      height: 20px;
      background-color: #333;
      border-radius: 10px;
      margin: 20px auto;
      overflow: hidden;
    }
    
    .capacity-fill {
      height: 100%;
      transition: width 0.3s ease, background 0.3s ease;
    }
    
    .capacity-text .max-capacity {
      color: #cc3333; /* Rouge plus foncé pour la capacité maximale */
    }
    
    .capacity-controls {
      padding: 20px;
      display: flex;
      flex-direction: column;
      gap: 15px;
    }
    
    .input-group {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .input-group label {
      font-size: 18px;
      font-weight: 500;
    }
    
    .input-group input {
      width: 100px;
      padding: 8px;
      background-color: #333;
      border: none;
      color: white;
      border-radius: 4px;
      text-align: center;
    }
    
    .input-group input[readonly] {
      background-color: #252525;
      cursor: not-allowed;
    }
    
    .control-group {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .control-group label {
      font-size: 16px;
      color: #b3b3b3;
      font-weight: 500;
    }
    
    .control-buttons {
      display: flex;
      gap: 10px;
      justify-content: center;
    }
    
    .control-btn {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      border: none;
      background-color: #333;
      color: white;
      font-size: 24px;
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: background-color 0.2s;
    }
    
    .control-btn:hover {
      background-color: #444;
    }
    
    .control-btn:active {
      background-color: #555;
    }
    
    .update-btn {
      padding: 15px;
      background: linear-gradient(to right, #9733EE, #DA22FF);
      color: white;
      border: none;
      border-radius: 6px;
      font-size: 18px;
      font-weight: 600;
      cursor: pointer;
      transition: opacity 0.2s;
      margin: 20px;
    }
    
    .update-btn:hover {
      opacity: 0.9;
    }
    
    .update-btn:active {
      opacity: 0.8;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>GESTION CAPACITÉ</h1>
      <div class="subtitle">Affichage dynamique de la capacité actuelle</div>
    </div>
    
    <div class="capacity-display">
      <div class="current-capacity" id="current-capacity">0</div>
      <div class="capacity-bar">
        <div class="capacity-fill" id="capacity-fill" style="width: 0%"></div>
      </div>
      <div class="capacity-text" id="capacity-text">
        0 / <span class="max-capacity">0</span>
      </div>
    </div>
    
    <div class="capacity-controls">
      <div class="input-group">
        <label>Capacité Maximum :</label>
        <input type="number" id="max-capacity" min="0" value="100">
      </div>
      <div class="input-group">
        <label>Nombre de Clients Actuel :</label>
        <input type="number" id="current-count" min="0" value="0" readonly>
      </div>
      <div class="control-group">
        <label>Ajustement :</label>
        <div class="control-buttons">
          <button class="control-btn" onclick="updateCount(-1)">-</button>
          <button class="control-btn" onclick="updateCount(1)">+</button>
        </div>
      </div>
      <button class="update-btn" onclick="updateCapacity()">Mettre à jour</button>
    </div>
  </div>

  <script>
    let maxCapacity = 100;
    let currentCount = 0;

    function interpolateColor(color1, color2, factor) {
      const r1 = parseInt(color1.slice(1, 3), 16);
      const g1 = parseInt(color1.slice(3, 5), 16);
      const b1 = parseInt(color1.slice(5, 7), 16);
      const r2 = parseInt(color2.slice(1, 3), 16);
      const g2 = parseInt(color2.slice(3, 5), 16);
      const b2 = parseInt(color2.slice(5, 7), 16);

      const r = Math.round(r1 + (r2 - r1) * factor);
      const g = Math.round(g1 + (g2 - g1) * factor);
      const b = Math.round(b1 + (b2 - b1) * factor);

      return `rgb(${r}, ${g}, ${b})`;
    }

    function updateDisplay() {
      const currentCapacityEl = document.getElementById('current-capacity');
      const capacityFillEl = document.getElementById('capacity-fill');
      const capacityTextEl = document.getElementById('capacity-text');
      const currentInput = document.getElementById('current-count');
      
      currentCapacityEl.textContent = currentCount;
      currentInput.value = currentCount;
      const percentage = maxCapacity > 0 ? (currentCount / maxCapacity) * 100 : 0;
      capacityFillEl.style.width = `${percentage}%`;
      
      // Calcul du dégradé dynamique
      const startColor1 = '#9733EE'; // Violet initial
      const startColor2 = '#DA22FF'; // Deuxième couleur du dégradé initial
      const endColor = '#cc3333';    // Rouge plus foncé final
      const factor = maxCapacity > 0 ? currentCount / maxCapacity : 0;
      
      // Interpolation pour la couleur de fin du dégradé
      const dynamicEndColor = interpolateColor(startColor2, endColor, factor);
      capacityFillEl.style.background = `linear-gradient(to right, ${startColor1}, ${dynamicEndColor})`;
      
      capacityTextEl.innerHTML = `${currentCount} / <span class="max-capacity">${maxCapacity}</span>`;
    }

    function updateCount(change) {
      let newCount = currentCount + change;
      
      if (newCount < 0) newCount = 0;
      if (newCount > maxCapacity) newCount = maxCapacity;
      
      currentCount = newCount;
      updateDisplay();
    }

    function updateCapacity() {
      const maxInput = document.getElementById('max-capacity');
      
      maxCapacity = parseInt(maxInput.value) || 0;
      if (maxCapacity < 0) maxCapacity = 0;
      
      if (currentCount > maxCapacity) {
        currentCount = maxCapacity;
      }
      
      updateDisplay();
    }

    // Initialisation
    document.getElementById('max-capacity').value = maxCapacity;
    document.getElementById('current-count').value = currentCount;
    updateDisplay();
  </script>
</body>
</html>
