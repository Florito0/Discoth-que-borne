<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Vestiaire Automatique</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Roboto', sans-serif;
    }
    
    body {
      background-color: #121212;
      color: #ffffff;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 10px;
    }
    
    .container, .admin-container {
      background-color: #1e1e1e;
      border-radius: 12px;
      width: 100%;
      max-width: 600px;
      overflow: hidden;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
      margin: 10px auto;
    }
    
    .header {
      background-color: #2c2c2c;
      padding: 15px;
      text-align: center;
      border-bottom: 1px solid #333;
    }
    
    h1 {
      font-size: clamp(18px, 4vw, 24px);
      font-weight: 700;
      margin-bottom: 8px;
      color: #fff;
    }
    
    .subtitle {
      font-size: clamp(12px, 3vw, 16px);
      color: #b3b3b3;
    }
    
    .items-container, .admin-items {
      padding: 15px;
    }
    
    .empty-message {
      text-align: center;
      color: #b3b3b3;
      font-size: clamp(14px, 3.5vw, 18px);
      padding: 20px 0;
    }
    
    .notification {
      position: fixed;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      background-color: #333;
      color: white;
      padding: 10px 20px;
      border-radius: 6px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
      font-size: clamp(12px, 3vw, 16px);
      z-index: 1000;
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .notification.show {
      opacity: 1;
    }
    
    .item {
      display: grid;
      grid-template-columns: 2fr 1fr 2fr;
      align-items: center;
      padding: 10px 0;
      border-bottom: 1px solid #333;
    }
    
    .item:last-child {
      border-bottom: none;
    }
    
    .item-name {
      font-size: clamp(14px, 3.5vw, 18px);
      font-weight: 500;
      white-space: normal;
      overflow-wrap: break-word;
      word-break: break-word;
      line-height: 1.2;
    }
    
    .item-price {
      font-size: clamp(14px, 3.5vw, 18px);
      color: #b3b3b3;
      text-align: center;
      display: flex;
      justify-content: center;
      align-items: center;
      min-width: 40px;
    }
    
    .quantity-control {
      display: flex;
      align-items: center;
      justify-content: flex-end;
      gap: 5px;
    }
    
    .qty-btn {
      width: clamp(28px, 8vw, 36px);
      height: clamp(28px, 8vw, 36px);
      border-radius: 50%;
      border: none;
      background-color: #333;
      color: white;
      font-size: clamp(14px, 4vw, 18px);
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: background-color 0.2s;
    }
    
    .qty-btn:hover {
      background-color: #444;
    }
    
    .qty-btn:active {
      background-color: #555;
    }
    
    .qty-value {
      width: clamp(30px, 10vw, 40px);
      text-align: center;
      font-size: clamp(14px, 3.5vw, 18px);
    }
    
    .total-section {
      background-color: #2c2c2c;
      padding: 15px;
      border-top: 1px solid #333;
    }
    
    .total-row {
      display: flex;
      justify-content: space-between;
      font-size: clamp(16px, 4vw, 20px);
      font-weight: 700;
      margin-bottom: 15px;
    }
    
    .checkout-btn {
      display: block;
      width: 100%;
      padding: clamp(10px, 3vw, 15px);
      background: linear-gradient(to right, #9733EE, #DA22FF);
      color: white;
      border: none;
      border-radius: 6px;
      font-size: clamp(14px, 3.5vw, 18px);
      font-weight: 600;
      cursor: pointer;
      transition: opacity 0.2s;
    }
    
    .checkout-btn:hover {
      opacity: 0.9;
    }
    
    .checkout-btn:active {
      opacity: 0.8;
    }
    
    .checkout-btn:disabled {
      background: #444;
      opacity: 0.6;
      cursor: not-allowed;
    }

    .no-vestiaire-btn {
      display: block;
      width: 100%;
      padding: clamp(10px, 3vw, 15px);
      background: #444;
      color: #b3b3b3;
      border: 1px solid #666;
      border-radius: 6px;
      font-size: clamp(14px, 3.5vw, 18px);
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.2s, color 0.2s;
      margin-top: 10px;
    }
    
    .no-vestiaire-btn:hover {
      background: #555;
      color: #ccc;
    }
    
    .no-vestiaire-btn:active {
      background: #666;
    }

    .admin-container {
      display: block;
    }
    
    .admin-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px 0;
      border-bottom: 1px solid #333;
      cursor: move;
      transition: background-color 0.2s;
    }
    
    .admin-item.dragging {
      opacity: 0.5;
      background-color: #333;
    }
    
    .admin-form {
      padding: 15px;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    
    .admin-form input {
      padding: clamp(6px, 2vw, 8px);
      background-color: #333;
      border: none;
      color: white;
      border-radius: 4px;
      font-size: clamp(12px, 3vw, 16px);
    }
    
    .admin-btn {
      padding: clamp(8px, 2.5vw, 10px);
      background-color: #9733EE;
      border: none;
      color: white;
      border-radius: 4px;
      cursor: pointer;
      font-size: clamp(12px, 3vw, 16px);
    }
    
    .admin-btn:hover {
      background-color: #DA22FF;
    }
    
    .delete-btn {
      width: clamp(28px, 8vw, 32px);
      height: clamp(28px, 8vw, 32px);
      background-color: #ff4444;
      border: none;
      border-radius: 50%;
      color: white;
      font-size: clamp(12px, 4vw, 16px);
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: background-color 0.2s, transform 0.2s;
    }
    
    .delete-btn:hover {
      background-color: #ff6666;
      transform: scale(1.1);
    }
    
    .delete-btn:active {
      transform: scale(0.95);
    }
    
    /* Style pour le bouton toggle en haut à droite */
    .toggle-btn {
      position: fixed;
      top: 10px;
      right: 10px;
      padding: 10px 20px;
      background: #444;
      border: 1px solid #333;
      border-radius: 4px;
      cursor: pointer;
      color: white;
      transition: background-color 0.3s;
      z-index: 1000;
    }

    .toggle-btn:hover {
      background: #555;
    }
    
    @media (max-width: 768px) {
      .item {
        grid-template-columns: 1fr 1fr 1fr;
        padding: 8px 0;
      }
      .quantity-control {
        gap: 3px;
      }
    }

    @media (max-width: 480px) {
      .item {
        grid-template-columns: 2fr 1fr 2fr;
        padding: 6px 0;
      }
      .header {
        padding: 10px;
      }
      .items-container, .admin-items, .total-section, .admin-form {
        padding: 10px;
      }
      .total-row {
        flex-direction: column;
        align-items: center;
        gap: 5px;
      }
      .quantity-control {
        flex-wrap: wrap;
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <!-- Notification -->
  <div id="notification" class="notification"></div>

  <!-- Interface Client -->
  <div class="container" id="client-interface" style="display: none;">
    <div class="header">
      <h1>VESTIAIRE</h1>
      <div class="subtitle">Sélectionnez vos articles</div>
    </div>
    
    <div class="items-container" id="items-container"></div>
    
    <div class="total-section">
      <div class="total-row">
        <div>TOTAL</div>
        <div id="total-price">0€</div>
      </div>
      <button id="checkout-btn" class="checkout-btn" disabled onclick="validateSelection()" aria-label="Valider la sélection">VALIDER</button>
      <button id="no-vestiaire-btn" class="no-vestiaire-btn" onclick="noVestiaire()" aria-label="Continuer sans vestiaire">SANS VESTIAIRE</button>
    </div>
  </div>

  <!-- Interface Gérant -->
  <div class="admin-container" id="admin-interface" style="display: block;">
    <div class="header">
      <h1>GESTION VESTIAIRE</h1>
      <div class="subtitle">Modifier les articles</div>
    </div>
    
    <div class="admin-items" id="admin-items"></div>
    
    <div class="admin-form">
      <input type="text" id="new-item-name" placeholder="Nom de l'article" aria-label="Nom de l'article">
      <input type="number" id="new-item-price" placeholder="Prix (€)" step="0.01" aria-label="Prix de l'article en euros">
      <button class="admin-btn" onclick="addItem()" aria-label="Ajouter un article">Ajouter Article</button>
    </div>
  </div>

  <!-- Bouton toggle en haut à droite -->
  <button class="toggle-btn" id="toggle-btn" onclick="toggleInterface()" aria-label="Basculer entre les interfaces">Passer au Kiosque</button>

  <script>
    let items = [];

    function showNotification(message) {
      const notification = document.getElementById('notification');
      notification.textContent = message;
      notification.classList.add('show');
      setTimeout(() => notification.classList.remove('show'), 3000);
    }

    function renderItems() {
      const container = document.getElementById('items-container');
      if (!container) {
        console.error("Conteneur client non trouvé");
        return;
      }
      container.innerHTML = '';
      if (items.length === 0) {
        container.innerHTML = '<div class="empty-message">Aucun article disponible pour le moment.</div>';
      } else {
        items.forEach(item => {
          container.innerHTML += `
            <div class="item">
              <div class="item-name">${item.name}</div>
              <div class="item-price">${item.price.toFixed(2)}€</div>
              <div class="quantity-control">
                <button class="qty-btn" data-id="${item.id}" data-action="decrease" aria-label="Diminuer la quantité de ${item.name}">-</button>
                <div id="${item.id}-qty" class="qty-value">${item.qty}</div>
                <button class="qty-btn" data-id="${item.id}" data-action="increase" aria-label="Augmenter la quantité de ${item.name}">+</button>
              </div>
            </div>
          `;
        });
      }
      updateTotal();
      attachQuantityListeners();
    }

    function attachQuantityListeners() {
      const container = document.getElementById('items-container');
      if (!container) return;
      container.querySelectorAll('.qty-btn').forEach(btn => {
        btn.removeEventListener('click', handleQuantityClick);
        btn.addEventListener('click', handleQuantityClick);
      });
    }

    function handleQuantityClick(event) {
      const id = event.target.dataset.id;
      const action = event.target.dataset.action;
      updateQuantity(id, action === 'increase' ? 1 : -1);
    }

    function updateQuantity(itemId, change) {
      const item = items.find(i => i.id === itemId);
      if (!item) {
        console.error(`Article non trouvé : ${itemId}`);
        return;
      }
      const newQty = item.qty + change;
      if (newQty >= 0) {
        item.qty = newQty;
        const qtyElement = document.getElementById(`${itemId}-qty`);
        if (qtyElement) qtyElement.textContent = newQty;
        updateTotal();
      }
    }

    function updateTotal() {
      let total = 0;
      let itemCount = 0;
      items.forEach(item => {
        total += item.price * item.qty;
        itemCount += item.qty;
      });
      const totalElement = document.getElementById('total-price');
      const checkoutBtn = document.getElementById('checkout-btn');
      if (totalElement && checkoutBtn) {
        totalElement.textContent = `${total.toFixed(2)}€`;
        checkoutBtn.disabled = itemCount === 0;
      }
    }

    function validateSelection() {
      items.forEach(item => item.qty = 0);
      renderItems();
      showNotification('Sélection validée !');
    }

    function switchToAdmin() {
      document.getElementById('client-interface').style.display = 'none';
      document.getElementById('admin-interface').style.display = 'block';
      document.getElementById('toggle-btn').textContent = 'Passer au Kiosque';
      renderAdminItems();
    }

    function switchToClient() {
      document.getElementById('admin-interface').style.display = 'none';
      document.getElementById('client-interface').style.display = 'block';
      document.getElementById('toggle-btn').textContent = "Passer à l'accès gérant";
      renderItems();
    }

    function noVestiaire() {
      items.forEach(item => item.qty = 0);
      renderItems();
      showNotification('Continuer sans vestiaire.');
    }

    function renderAdminItems() {
      const adminContainer = document.getElementById('admin-items');
      if (!adminContainer) {
        console.error("Conteneur admin non trouvé");
        return;
      }
      adminContainer.innerHTML = '';
      if (items.length === 0) {
        adminContainer.innerHTML = '<div class="empty-message">Aucun article pour le moment. Ajoutez-en un ci-dessous.</div>';
      } else {
        items.forEach(item => {
          const itemDiv = document.createElement('div');
          itemDiv.className = 'admin-item';
          itemDiv.draggable = true;
          itemDiv.dataset.id = item.id;
          itemDiv.innerHTML = `
            <span>${item.name} - ${item.price.toFixed(2)}€</span>
            <button class="delete-btn" data-id="${item.id}" aria-label="Supprimer ${item.name}">🗑️</button>
          `;
          adminContainer.appendChild(itemDiv);
        });
      }
      attachDeleteListeners();
      attachDragAndDropListeners();
    }

    function attachDeleteListeners() {
      const adminContainer = document.getElementById('admin-items');
      if (!adminContainer) return;
      adminContainer.querySelectorAll('.delete-btn').forEach(btn => {
        btn.removeEventListener('click', handleDeleteClick);
        btn.addEventListener('click', handleDeleteClick);
      });
    }

    function handleDeleteClick(event) {
      const id = event.target.dataset.id;
      deleteItem(id);
    }

    function attachDragAndDropListeners() {
      const adminContainer = document.getElementById('admin-items');
      if (!adminContainer) return;
      const adminItems = adminContainer.querySelectorAll('.admin-item');

      adminItems.forEach(item => {
        item.addEventListener('dragstart', (e) => {
          item.classList.add('dragging');
          e.dataTransfer.setData('text/plain', item.dataset.id);
        });

        item.addEventListener('dragend', () => {
          item.classList.remove('dragging');
        });

        item.addEventListener('dragover', (e) => {
          e.preventDefault();
        });

        item.addEventListener('drop', (e) => {
          e.preventDefault();
          const draggedId = e.dataTransfer.getData('text/plain');
          const draggedItem = items.find(i => i.id === draggedId);
          const targetId = item.dataset.id;
          const targetItem = items.find(i => i.id === targetId);

          if (draggedId && targetId && draggedId !== targetId) {
            const draggedIndex = items.indexOf(draggedItem);
            const targetIndex = items.indexOf(targetItem);
            if (draggedIndex !== -1 && targetIndex !== -1) {
              items.splice(draggedIndex, 1); // Correction du bug : suppression correcte
              items.splice(targetIndex, 0, draggedItem);
              renderAdminItems();
              renderItems();
            }
          }
        });
      });
    }

    function addItem() {
      const name = document.getElementById('new-item-name').value.trim();
      const priceInput = document.getElementById('new-item-price').value;
      const price = priceInput ? parseFloat(priceInput) : NaN;

      if (name && !isNaN(price) && price >= 0) {
        const id = name.toLowerCase().replace(/\s+/g, '-') + '-' + Date.now(); // ID unique
        if (items.some(i => i.name.toLowerCase() === name.toLowerCase())) {
          showNotification('Cet article existe déjà !');
          return;
        }
        items.push({ id, name, price, qty: 0 });
        document.getElementById('new-item-name').value = '';
        document.getElementById('new-item-price').value = '';
        renderAdminItems();
        renderItems();
        showNotification('Article ajouté avec succès !');
      } else {
        showNotification('Veuillez entrer un nom valide et un prix positif.');
      }
    }

    function deleteItem(itemId) {
      const itemIndex = items.findIndex(i => i.id === itemId);
      if (itemIndex === -1) {
        console.error(`Article non trouvé pour suppression : ${itemId}`);
        return;
      }
      items.splice(itemIndex, 1);
      renderAdminItems();
      renderItems();
      showNotification('Article supprimé.');
    }

    function toggleInterface() {
      const clientInterface = document.getElementById('client-interface');
      if (clientInterface.style.display === 'none') {
        switchToClient();
      } else {
        switchToAdmin();
      }
    }

    // Initialisation
    window.onload = () => {
      document.getElementById('admin-interface').style.display = 'block';
      document.getElementById('client-interface').style.display = 'none';
      document.getElementById('toggle-btn').textContent = 'Passer au Kiosque';
      renderAdminItems();
    };
  </script>
</body>
</html>
