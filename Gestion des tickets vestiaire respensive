<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Vestiaire Automatique</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Roboto', sans-serif;
    }
    
    body {
      background-color: #121212;
      color: #ffffff;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 10px; /* Réduit pour petits écrans */
    }
    
    .container, .admin-container {
      background-color: #1e1e1e;
      border-radius: 12px;
      width: 100%;
      max-width: 600px; /* Limite pour grands écrans */
      overflow: hidden;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
      margin: 10px auto; /* Centré avec marge réduite */
    }
    
    .header {
      background-color: #2c2c2c;
      padding: 15px; /* Réduit pour petits écrans */
      text-align: center;
      border-bottom: 1px solid #333;
    }
    
    h1 {
      font-size: clamp(18px, 4vw, 24px); /* Taille adaptable */
      font-weight: 700;
      margin-bottom: 8px;
      color: #fff;
    }
    
    .subtitle {
      font-size: clamp(12px, 3vw, 16px); /* Taille adaptable */
      color: #b3b3b3;
    }
    
    .items-container, .admin-items {
      padding: 15px; /* Réduit pour petits écrans */
    }
    
    .item {
      display: grid;
      grid-template-columns: 2fr 1fr 2fr; /* Proportion ajustée */
      align-items: center;
      padding: 10px 0; /* Réduit pour petits écrans */
      border-bottom: 1px solid #333;
    }
    
    .item:last-child {
      border-bottom: none;
    }
    
    .item-name {
      font-size: clamp(14px, 3.5vw, 18px); /* Taille adaptable */
      font-weight: 500;
    }
    
    .item-price {
      font-size: clamp(14px, 3.5vw, 18px);
      color: #b3b3b3;
      text-align: center;
    }
    
    .quantity-control {
      display: flex;
      align-items: center;
      justify-content: flex-end;
      gap: 5px; /* Espacement réduit */
    }
    
    .qty-btn {
      width: clamp(28px, 8vw, 36px); /* Taille adaptable */
      height: clamp(28px, 8vw, 36px);
      border-radius: 50%;
      border: none;
      background-color: #333;
      color: white;
      font-size: clamp(14px, 4vw, 18px);
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: background-color 0.2s;
    }
    
    .qty-btn:hover {
      background-color: #444;
    }
    
    .qty-btn:active {
      background-color: #555;
    }
    
    .qty-value {
      width: clamp(30px, 10vw, 40px); /* Taille adaptable */
      text-align: center;
      font-size: clamp(14px, 3.5vw, 18px);
    }
    
    .total-section {
      background-color: #2c2c2c;
      padding: 15px; /* Réduit pour petits écrans */
      border-top: 1px solid #333;
    }
    
    .total-row {
      display: flex;
      justify-content: space-between;
      font-size: clamp(16px, 4vw, 20px); /* Taille adaptable */
      font-weight: 700;
      margin-bottom: 15px;
    }
    
    .checkout-btn {
      display: block;
      width: 100%;
      padding: clamp(10px, 3vw, 15px); /* Taille adaptable */
      background: linear-gradient(to right, #9733EE, #DA22FF);
      color: white;
      border: none;
      border-radius: 6px;
      font-size: clamp(14px, 3.5vw, 18px);
      font-weight: 600;
      cursor: pointer;
      transition: opacity 0.2s;
    }
    
    .checkout-btn:hover {
      opacity: 0.9;
    }
    
    .checkout-btn:active {
      opacity: 0.8;
    }
    
    .checkout-btn:disabled {
      background: #444;
      opacity: 0.6;
      cursor: not-allowed;
    }

    .admin-container {
      display: none;
    }
    
    .admin-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px 0; /* Réduit pour petits écrans */
      border-bottom: 1px solid #333;
    }
    
    .admin-form {
      padding: 15px; /* Réduit pour petits écrans */
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    
    .admin-form input {
      padding: clamp(6px, 2vw, 8px); /* Taille adaptable */
      background-color: #333;
      border: none;
      color: white;
      border-radius: 4px;
      font-size: clamp(12px, 3vw, 16px);
    }
    
    .admin-btn {
      padding: clamp(8px, 2.5vw, 10px); /* Taille adaptable */
      background-color: #9733EE;
      border: none;
      color: white;
      border-radius: 4px;
      cursor: pointer;
      font-size: clamp(12px, 3vw, 16px);
    }
    
    .admin-btn:hover {
      background-color: #DA22FF;
    }
    
    .delete-btn {
      width: clamp(28px, 8vw, 32px); /* Taille adaptable */
      height: clamp(28px, 8vw, 32px);
      background-color: #ff4444;
      border: none;
      border-radius: 50%;
      color: white;
      font-size: clamp(12px, 4vw, 16px);
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: background-color 0.2s, transform 0.2s;
    }
    
    .delete-btn:hover {
      background-color: #ff6666;
      transform: scale(1.1);
    }
    
    .delete-btn:active {
      transform: scale(0.95);
    }
    
    .login-section {
      padding: 15px; /* Réduit pour petits écrans */
      text-align: center;
    }
    
    .login-section input {
      padding: clamp(6px, 2vw, 8px); /* Taille adaptable */
      margin-right: 10px;
      font-size: clamp(12px, 3vw, 16px);
    }

    /* Media Queries pour ajustements spécifiques */
    @media (max-width: 768px) { /* Tablettes */
      .item {
        grid-template-columns: 1fr 1fr 1fr; /* Plus compact */
        padding: 8px 0;
      }
      .quantity-control {
        gap: 3px; /* Espacement réduit */
      }
    }

    @media (max-width: 480px) { /* Téléphones */
      .item {
        grid-template-columns: 2fr 1fr 2fr; /* Proportion ajustée */
        padding: 6px 0;
      }
      .header {
        padding: 10px;
      }
      .items-container, .admin-items, .total-section, .admin-form, .login-section {
        padding: 10px;
      }
      .total-row {
        flex-direction: column; /* Total en colonne sur petits écrans */
        align-items: center;
        gap: 5px;
      }
      .quantity-control {
        flex-wrap: wrap; /* Boutons en ligne ou wrap */
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <!-- Interface Client -->
  <div class="container" id="client-interface">
    <div class="header">
      <h1>VESTIAIRE</h1>
      <div class="subtitle">Sélectionnez vos articles</div>
      <button class="admin-btn" onclick="showAdminLogin()">Accès Gérant</button>
    </div>
    
    <div class="items-container" id="items-container"></div>
    
    <div class="total-section">
      <div class="total-row">
        <div>TOTAL</div>
        <div id="total-price">0€</div>
      </div>
      <button id="checkout-btn" class="checkout-btn" disabled>VALIDER</button>
    </div>
  </div>

  <!-- Interface Gérant -->
  <div class="admin-container" id="admin-interface">
    <div class="header">
      <h1>GESTION VESTIAIRE</h1>
      <div class="subtitle">Modifier les articles</div>
    </div>
    
    <div class="login-section" id="admin-login">
      <input type="password" id="admin-password" placeholder="Mot de passe">
      <button class="admin-btn" onclick="loginAdmin()">Connexion</button>
    </div>
    
    <div class="admin-items" id="admin-items" style="display: none;"></div>
    
    <div class="admin-form" id="admin-form" style="display: none;">
      <input type="text" id="new-item-name" placeholder="Nom de l'article">
      <input type="number" id="new-item-price" placeholder="Prix (€)" step="0.01">
      <button class="admin-btn" onclick="addItem()">Ajouter Article</button>
      <button class="admin-btn" onclick="logoutAdmin()">Déconnexion</button>
    </div>
  </div>

  <script>
    let items = {
      'manteau': { name: 'Manteau', price: 3, qty: 0 },
      'echarpe': { name: 'Écharpe', price: 1, qty: 0 },
      'sac': { name: 'Sac', price: 3, qty: 0 },
      'sweatshirt': { name: 'Sweat-shirt', price: 2, qty: 0 }
    };

    const ADMIN_PASSWORD = "admin123";

    function renderItems() {
      const container = document.getElementById('items-container');
      if (!container) {
        console.error("Conteneur client non trouvé");
        return;
      }
      container.innerHTML = '';
      for (const [id, item] of Object.entries(items)) {
        container.innerHTML += `
          <div class="item">
            <div class="item-name">${item.name}</div>
            <div class="item-price">${item.price}€</div>
            <div class="quantity-control">
              <button class="qty-btn" data-id="${id}" data-action="decrease">-</button>
              <div id="${id}-qty" class="qty-value">${item.qty}</div>
              <button class="qty-btn" data-id="${id}" data-action="increase">+</button>
            </div>
          </div>
        `;
      }
      attachQuantityListeners();
      updateTotal();
    }

    function attachQuantityListeners() {
      document.querySelectorAll('.qty-btn').forEach(button => {
        button.removeEventListener('click', handleQuantityClick);
        button.addEventListener('click', handleQuantityClick);
      });
    }

    function handleQuantityClick() {
      const id = this.dataset.id;
      const action = this.dataset.action;
      updateQuantity(id, action === 'increase' ? 1 : -1);
    }

    function updateQuantity(itemId, change) {
      if (!items[itemId]) {
        console.error(`Article non trouvé : ${itemId}`);
        return;
      }
      const newQty = items[itemId].qty + change;
      if (newQty >= 0) {
        items[itemId].qty = newQty;
        const qtyElement = document.getElementById(`${itemId}-qty`);
        if (qtyElement) {
          qtyElement.textContent = newQty;
        }
        updateTotal();
      }
    }

    function updateTotal() {
      let total = 0;
      let itemCount = 0;
      for (const item of Object.values(items)) {
        total += item.price * item.qty;
        itemCount += item.qty;
      }
      const totalElement = document.getElementById('total-price');
      const checkoutBtn = document.getElementById('checkout-btn');
      if (totalElement && checkoutBtn) {
        totalElement.textContent = `${total}€`;
        checkoutBtn.disabled = itemCount === 0;
      }
    }

    function showAdminLogin() {
      document.getElementById('client-interface').style.display = 'none';
      document.getElementById('admin-interface').style.display = 'block';
    }

    function loginAdmin() {
      const password = document.getElementById('admin-password').value;
      if (password === ADMIN_PASSWORD) {
        document.getElementById('admin-login').style.display = 'none';
        document.getElementById('admin-items').style.display = 'block';
        document.getElementById('admin-form').style.display = 'block';
        renderAdminItems();
      } else {
        alert('Mot de passe incorrect');
      }
    }

    function logoutAdmin() {
      document.getElementById('admin-interface').style.display = 'none';
      document.getElementById('client-interface').style.display = 'block';
      document.getElementById('admin-password').value = '';
      renderItems();
    }

    function renderAdminItems() {
      const adminContainer = document.getElementById('admin-items');
      if (!adminContainer) {
        console.error("Conteneur admin non trouvé");
        return;
      }
      adminContainer.innerHTML = '';
      for (const [id, item] of Object.entries(items)) {
        const itemDiv = document.createElement('div');
        itemDiv.className = 'admin-item';
        itemDiv.innerHTML = `
          <span>${item.name} - ${item.price}€</span>
          <button class="delete-btn" data-id="${id}">🗑️</button>
        `;
        adminContainer.appendChild(itemDiv);
      }
      attachDeleteListeners();
    }

    function attachDeleteListeners() {
      document.querySelectorAll('.delete-btn').forEach(button => {
        button.removeEventListener('click', handleDeleteClick);
        button.addEventListener('click', handleDeleteClick);
      });
    }

    function handleDeleteClick() {
      const id = this.dataset.id;
      deleteItem(id);
    }

    function addItem() {
      const name = document.getElementById('new-item-name').value.trim();
      const price = parseFloat(document.getElementById('new-item-price').value);
      if (name && !isNaN(price) && price >= 0) {
        const id = name.toLowerCase().replace(/\s+/g, '-');
        if (items[id]) {
          alert('Cet article existe déjà !');
          return;
        }
        items[id] = { name, price, qty: 0 };
        document.getElementById('new-item-name').value = '';
        document.getElementById('new-item-price').value = '';
        renderAdminItems();
        renderItems();
      } else {
        alert('Veuillez entrer un nom valide et un prix positif.');
      }
    }

    function deleteItem(itemId) {
      if (!items[itemId]) {
        console.error(`Article non trouvé pour suppression : ${itemId}`);
        return;
      }
      console.log(`Suppression de l'article : ${itemId}`);
      delete items[itemId];
      renderAdminItems();
      renderItems();
    }

    // Initialisation
    renderItems();
  </script>
</body>
</html>
